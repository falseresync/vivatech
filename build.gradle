import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'com.gradleup.shadow' version '9.0.0-beta10'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
}

fabricApi {
	configureDataGeneration()
}

loom {
	accessWidenerPath = file("src/main/resources/vivatech.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation 'org.jgrapht:jgrapht-core:1.5.2'
	shadow 'org.jgrapht:jgrapht-core:1.5.2'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.build {
	dependsOn('shadowJar')
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

tasks.withType(ShadowJar).configureEach {
	configurations = [project.configurations.shadow]
	minimize()
	enableRelocation = true
	relocationPrefix = "falseresync.shadowed"
	exclude('.cache/**')
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}
